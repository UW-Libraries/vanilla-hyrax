---
  - name: Create new rails app
    shell: "rails new {{ application_home }} -m roles/hyrax-fullstack/files/template.rb creates={{ application_home }}/Gemfile"

  - name: Bundle install
#    command: "bundle install --without production --path vendor/bundle chdir={{ application_home }}"
    command: "bundle install --path vendor/bundle chdir={{ application_home }}"

  - name: enable ffmpeg
    replace:
      dest: "{{ config_path }}/initializers/hyrax.rb"
      regexp: '# config.enable_ffmpeg = false'
      replace: 'config.enable_ffmpeg = true'

  #- name: Add clamav gem to gemfile
  #  lineinfile: "dest={{ application_home }}/Gemfile line=\"gem '{{ item }}'\""
  #  with_items:
  #    - "clamav"
  #  Disable this for now since bundler will fail. centos 7 installs ClamAV 0.101.4
  #  https://github.com/samvera/hyrax/issues/3538
  #  https://github.com/psu-stewardship/scholarsphere/wiki/Clam-AV-Error-on-Bundle-install

  - name: devise.rb
    become: yes
    lineinfile:
      #path: /var/hyrax/config/initializers/devise.rb'
      dest: "{{ application_home }}/config/initializers/devise.rb"
      regexp: '^  # config.secret_key'
      line: "  config.secret_key = '{{ devise_secret }}'"
      backrefs: yes

  - name: Add default secret to secrets.yml
    become: yes
    replace:
      path: "{{ application_home }}/config/secrets.yml"
      regexp: '<%= ENV\["SECRET_KEY_BASE"\] %>'
      replace: "{{ rails_secret }}"

  - name: Add default roles to config/role_map.yml
    become: yes
    blockinfile:
      dest: "{{ application_home }}/config/role_map.yml"
      insertafter: '  # Add roles for users here.'
      content: |2
          admin_policy_object_editor:
            - archivist1@example.com
          researcher:
            - archivist1@example.com
            - researcher1@example.com

  - name: Remove Spring gem
    command: "bin/spring binstub --remove --all"
    args:
      chdir: "{{ application_home }}"
      removes: "{{ application_home }}/bin/spring"

  #- name: Add hydra-role-management gem to gemfile
  #  lineinfile: "dest={{ application_home }}/Gemfile line=\"gem 'hydra-role-management'\""

  #- name: Install hydra-role-management gem
  #  command: "bundle install chdir={{ application_home }}"

  #- name: Generate admin role
  #  command: "rails generate roles chdir={{ application_home }}"
  #  args:
  #    creates: "{{ application_home }}/db/migrate/*_user_roles.rb"

  - name: Rake db
    command: "bundle exec rails db:migrate RAILS_ENV=production chdir={{ application_home }}"

  - name: Do a bad thing
    command: setenforce 0
    run_once: true

  #- name: whitelist the 10.0.2.2 network space in the Web Console config
  #  tags: whitelist
  #  blockinfile:
  #    dest: "{{ application_home }}/config/environments/development.rb"
  #    insertbefore: "end"
  #    block: |2
  #        class Application < Rails::Application
  #          config.web_console.whitelisted_ips = '10.0.2.2'
  #        end
