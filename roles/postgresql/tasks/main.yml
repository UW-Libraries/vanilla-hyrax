---
  - name: install postgresql
    yum: pkg={{ item }} state=latest
    with_items:
      - postgresql
      - postgresql-server
      - postgresql-devel
      - python-psycopg2

  - name: initdb
    action: shell creates=/var/lib/pgsql/data/postgresql.conf postgresql-setup initdb

  - name: start postgresql service
    service: name=postgresql state=started enabled=true

  - name: Create postgres db user
    become_user: postgres
    postgresql_user:
      name: "{{ db_user }}"
      password: "{{ db_pwd }}"

  - name: Create fcrepo db
    become_user: postgres
    postgresql_db: name={{ db_name }} owner={{ db_user }}

  - name: Check that user does not have unnecessary privilege
    become_user: postgres
    postgresql_user: name={{ db_user }} role_attr_flags=NOSUPERUSER,NOCREATEDB

  - name: replace pg_hba.conf
    template: src=pg_hba.conf.j2 dest=/var/lib/pgsql/data/pg_hba.conf
    notify: restart postgresql

  - name: restart postgresql
    service: name=postgresql state=restarted

  #- name: Add postgresql gem to gemfile
  #  lineinfile: "dest={{ application_home }}/Gemfile line=\"gem 'pg'\""

  - name: Add pinned postgresql gem to gemfile
    lineinfile: "dest={{ application_home }}/Gemfile line=\"gem 'pg', '~>0.21'\""

  - name: Add postgresql and sidekiq gem to gemfile
    lineinfile: "dest={{ application_home }}/Gemfile line=\"gem '{{ item }}'\""
    with_items:
      - "sidekiq"

  - name: Install postgresql and sidekiq gem 
    command: "bundle install --with production --path vendor/bundle chdir={{ application_home }}"

  #- name: update application's config/database.yml
  #  template: src=database.yml.j2 dest={{ application_home }}/config/database.yml

  - name: update application configs for database and sidekiq
    template: src={{ item }}.yml.j2 dest="{{ config_path }}/{{ item }}.yml"
    with_items:
      - "database"
      - "sidekiq"

  - name: install sidekiq initializer config file
    template: src={{ item }}.rb.j2 dest="{{ config_path }}/initializers/{{ item }}.rb"
    with_items:
      - "sidekiq"

  - name: copy sidekiq init.d file
    template:
      src: sidekiq.init.j2
      dest: "/etc/init.d/sidekiq"
      owner: root
      group: root
      mode: 0744

  - name: migrate db
    command: "bundle exec rails db:migrate RAILS_ENV=production chdir={{ application_home }}"
    ignore_errors: yes
